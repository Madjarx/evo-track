service: evo-ingress-serverless-layer-fun

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  memorySize: 128
  iam: 
    role:
      statements:
      # these doen't do anything (I dont know why!!)
        - Action: 'sqs:*'
          Effect: Allow
          Resource: '*'
        - Action: 'sns:*'
          Effect: Allow
          Resource: '*'
        - Action:
          - "logs:CreateLogGroup"
          - "logs:CreateLogStream"
          - "logs:PutLogEvents"
          - "logs:PutMetricFilter"
          - "logs:PutRetentionPolicy"
          Effect: Allow
          Resource: '*'

package:
  exclude:
    - lib/**
    - node_modules/**

functions:
  app:
    handler: app.handler
    # role: LambdaExecutionRole
    events: 
      - http: 
          path: /
          method: GET
          cors: true
      - http: 
          path: /ingress
          method: POST
          cors: true
    layers: # Ref name is generated by TitleCasing the layer name & appending LambdaLayer
      - Fn::ImportValue: PackagesLambdaLayer

  google-sheets:
    handler: google-sheets-app.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - GoogleSheetsQueueLayer
              - Arn
          batchSize: 1
    layers: 
      - Fn::ImportValue: PackagesLambdaLayer

resources:
  Resources: 
    # TRY SNS IF WE GET A CHANCE!!!!
    GoogleSheetsQueueLayer: 
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "GoogleSheetsQueueLayer"

    FanoutTopicLayer:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: "FanoutTopicLayer"
        Subscription:
          - Endpoint:
              Fn::GetAtt:
                - "GoogleSheetsQueueLayer"
                - "Arn"
            Protocol: "sqs"

    FanoutQueuePolicyLayer:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
        - Ref: GoogleSheetsQueueLayer
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: allow-sns-messages
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource:
              Fn::GetAtt:
              - GoogleSheetsQueueLayer
              - Arn
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: FanoutTopicLayer

    # LambdaExecutionRole:
    #   Type: AWS::IAM::Role
    #   Properties: 
    #     AssumeRolePolicyDocument:
    #       Version: '2012-10-17'
    #       Statement:
    #         - Effect: Allow
    #           Principal:
    #             Service:
    #               - lambda.amazonaws.com
    #           Action:
    #             - sts:AssumeRole
    #     Path: "/"
    #     Policies:
    #       - PolicyName: SQSFullAccess
    #         PolicyDocument:
    #           Version: "2012-10-17"
    #           Statement: 
    #             - Action: 'sqs:*'
    #               Effect: Allow
    #               Resource: '*'
    #       - PolicyName: SNSFullAccess
    #         PolicyDocument:
    #           Version: "2012-10-17"
    #           Statement: 
    #             - Action: 'sns:*'
    #               Effect: Allow
    #               Resource: '*'


